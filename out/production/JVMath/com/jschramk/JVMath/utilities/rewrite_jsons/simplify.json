[
  {
    "find": "x + 0",
    "id": "ADD_ZERO",
    "steps": [
      {
        "replace": "x",
        "description": "Cancel the ${0}$"
      }
    ]
  },
  {
    "find": "x + x",
    "id": "ADD_SAME",
    "steps": [
      {
        "replace": "2x"
      }
    ]
  },
  {
    "find": "a^2 + 2 a b + b^2",
    "id": "FACTOR",
    "steps": [
      {
        "replace": "(a + b)^2"
      }
    ]
  },
  {
    "find": "x - x",
    "id": "SUBTRACT_SAME",
    "steps": [
      {
        "replace": "0"
      }
    ]
  },
  {
    "find": "x + a * x",
    "id": "ADD_WITH_COEFFICIENT",
    "steps": [
      {
        "replace": "(1 + a) * x"
      }
    ],
    "require": [
      {
        "variable": "x",
        "contains solve": true
      }
    ]
  },
  {
    "find": "a x + b x",
    "id": "ADD_WITH_DOUBLE_COEFFICIENT",
    "steps": [
      {
        "replace": "(a + b) * x"
      }
    ],
    "require": [
      {
        "variable": "x",
        "contains solve": true,
        "not type": "LITERAL"
      }
    ]
  },
  {
    "find": "n * (a + b)",
    "id": "DISTRIBUTE_LITERAL",
    "steps": [
      {
        "replace": "n * a + n * b"
      }
    ],
    "require": [
      {
        "variable": "n",
        "type": "LITERAL"
      }
    ]
  },
  {
    "find": "a/x + b/x",
    "id": "ADD_SAME_DENOMINATOR",
    "steps": [
      {
        "replace": "(a + b) / x"
      }
    ]
  },
  {
    "find": "a/b + c/d",
    "id": "ADD_DIFFERENT_DENOMINATOR",
    "steps": [
      {
        "replace": "(a * d + b * c)/(b * d)"
      }
    ]
  },
  {
    "find": "-0",
    "id": "NEGATIVE_ZERO",
    "steps": [
      {
        "replace": "0"
      }
    ]
  },
  {
    "find": "0x",
    "id": "MULTIPLY_BY_ZERO",
    "steps": [
      {
        "replace": "0"
      }
    ]
  },
  {
    "find": "1x",
    "id": "MULTIPLY_BY_ONE",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "(-1) * x",
    "id": "MULTIPLY_BY_NEGATIVE_ONE",
    "steps": [
      {
        "replace": "-x"
      }
    ]
  },
  {
    "find": "neg1 * x",
    "id": "MULTIPLY_BY_LITERAL_NEGATIVE_ONE",
    "steps": [
      {
        "replace": "-x"
      }
    ],
    "require": [
      {
        "variable": "neg1",
        "type": "LITERAL",
        "value": -1.0
      }
    ]
  },
  {
    "find": "-(-x)",
    "id": "DOUBLE_NEGATIVE",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "-(a * b)",
    "steps": [
      {
        "replace": "(-a) * b"
      }
    ]
  },
  {
    "find": "-(a/b)",
    "steps": [
      {
        "replace": "(-a)/b"
      }
    ]
  },
  {
    "find": "-(a + b)",
    "steps": [
      {
        "replace": "-a - b"
      }
    ]
  },
  {
    "find": "x * x",
    "steps": [
      {
        "replace": "x^2"
      }
    ]
  },
  {
    "find": "x * x^a",
    "steps": [
      {
        "replace": "x^(1 + a)"
      }
    ]
  },
  {
    "find": "x^a * x^b",
    "steps": [
      {
        "replace": "x^(a + b)"
      }
    ]
  },
  {
    "find": "a^c * b^c",
    "steps": [
      {
        "replace": "(a * b)^c"
      }
    ]
  },
  {
    "find": "(a/b) * (c/d)",
    "steps": [
      {
        "replace": "(a*c) / (b*d)"
      }
    ]
  },
  {
    "find": "0/x",
    "steps": [
      {
        "replace": "0"
      }
    ]
  },
  {
    "find": "x/x",
    "steps": [
      {
        "replace": "1"
      }
    ]
  },
  {
    "find": "x/1",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "a/b/c",
    "steps": [
      {
        "replace": "a/(b * c)"
      }
    ]
  },
  {
    "find": "(a * b)/b",
    "steps": [
      {
        "replace": "a"
      }
    ]
  },
  {
    "find": "(a * x)/(b * x)",
    "steps": [
      {
        "replace": "a/b"
      }
    ]
  },
  {
    "find": "x/(a * x)",
    "steps": [
      {
        "replace": "1/a"
      }
    ]
  },
  {
    "find": "a/(b/c)",
    "steps": [
      {
        "replace": "(a * c)/b"
      }
    ]
  },
  {
    "find": "a(b/c)",
    "steps": [
      {
        "replace": "(a * b)/c"
      }
    ]
  },
  {
    "find": "x^a/x",
    "steps": [
      {
        "replace": "x^(a - 1)"
      }
    ]
  },
  {
    "find": "x^a/x^b",
    "steps": [
      {
        "replace": "x^(a - b)"
      }
    ]
  },
  {
    "find": "0^x",
    "steps": [
      {
        "replace": "0"
      }
    ]
  },
  {
    "find": "1^x",
    "steps": [
      {
        "replace": "1"
      }
    ]
  },
  {
    "find": "x^0",
    "steps": [
      {
        "replace": "1"
      }
    ]
  },
  {
    "find": "x^1",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "x^-1",
    "steps": [
      {
        "replace": "1/x"
      }
    ]
  },
  {
    "find": "x^-a",
    "steps": [
      {
        "replace": "1/x^a"
      }
    ]
  },
  {
    "find": "(x^a)^b",
    "steps": [
      {
        "replace": "x^(a * b)"
      }
    ]
  },
  {
    "find": "asin(sin(x))",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "acos(cos(x))",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "atan(tan(x))",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "log(a, a^x)",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "b^(1/a)",
    "steps": [
      {
        "replace": "root(a, b)"
      }
    ]
  },
  {
    "find": "a^(0.5)",
    "steps": [
      {
        "replace": "root(a)"
      }
    ]
  },
  {
    "find": "root(2, x)",
    "steps": [
      {
        "replace": "root(x)"
      }
    ]
  },
  {
    "find": "root(a, x^a)",
    "steps": [
      {
        "replace": "x"
      }
    ]
  },
  {
    "find": "sin(x)^2 + cos(x)^2",
    "steps": [
      {
        "replace": "1"
      }
    ]
  },
  {
    "find": "log(a, b^c)",
    "steps": [
      {
        "replace": "c * log(a, b)"
      }
    ]
  },
  {
    "find": "log(a^b)",
    "steps": [
      {
        "replace": "b * log(a)"
      }
    ]
  },
  {
    "find": "a(b + c) + d(f + g)",
    "steps": [
      {
        "replace": "(a * b) + (a * c) + (d * f) + (d * g)"
      }
    ]
  },
  {
    "find": "a * (-x)",
    "steps": [
      {
        "replace": "(-a) * x"
      }
    ],
    "require": [
      {
        "variable": "a",
        "not type": "VARIABLE"
      },
      {
        "variable": "x",
        "type": "VARIABLE"
      }
    ]
  },
  {
    "find": "a/b + c",
    "steps": [
      {
        "replace": "(a + b * c)/b"
      }
    ],
    "require": [
      {
        "variable": "b",
        "type": "LITERAL"
      }
    ]
  },
  {
    "find": "(a * x^n1)/(b * x^n2)",
    "steps": [
      {
        "replace": "a * x^(n1 - n2)/b"
      }
    ]
  },
  {
    "find": "x^n1/(b x^n2)",
    "steps": [
      {
        "replace": "x^(n1 - n2)/b"
      }
    ]
  },
  {
    "find": "(a x^n1)/x^n2",
    "steps": [
      {
        "replace": "a * x^(n1 - n2)"
      }
    ]
  }
]